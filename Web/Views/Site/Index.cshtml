@using Domain.Entities
@model IEnumerable<Site>

@{
    ViewBag.Title = "Index";
}

<h2>Destinations</h2>

<p>
    @Html.ActionLink("Create New", "Create")
    @using (Html.BeginForm("ResetDowntimeLimit", "Site", FormMethod.Post))
    {
        @Html.TextBox("downtimeLimit")
        <input type="submit" value="Reset Downtime"/>
    }
</p>
<table class="table">
    <tr>
        <th class="text-left">
            @Html.DisplayNameFor(model => model.Code)
        </th>
        <th class="text-left">
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Ip)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Community)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Isp)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Phone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Group)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DowntimeLimit)         
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model) {
        <tr>
            @{
                var item1 = item;
            }
            <td class="text-left">
                @Html.DisplayFor(modelItem => item1.Code)
            </td>
            <td class="text-left">
                @Html.DisplayFor(modelItem => item1.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item1.Ip)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item1.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item1.Community)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item1.Isp)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item1.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item1.Group.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item1.DowntimeLimit)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                @Html.ActionLink("Details", "Details", new { id=item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.Id })
            </td>
        </tr>
    }

</table>

@*@section scripts
{
    <script>

        var ViewModel = function() {
            var self = this;
            self.downtimeLimit = ko.observable();

            self.resetDowntimeLimit = function() {
                http.post(window.baseUrl + 'Site/ResetDowntimeLimit', { downtimeLimit: self.downtimeLimit() }, function() {
                    bootbox.alert('<h4 class="text-success">Reset downtime limit successfully.</h4>');
                });
            };
        };

        var vm = new ViewModel();
        ko.applyBindings(vm);

    </script>   
}*@
